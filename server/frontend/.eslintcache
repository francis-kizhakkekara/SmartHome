[{"/home/rubik/Documents/myServers/serv1/frontend/src/index.js":"1","/home/rubik/Documents/myServers/serv1/frontend/src/App.js":"2","/home/rubik/Documents/myServers/serv1/frontend/src/reportWebVitals.js":"3","/home/rubik/Documents/myServers/serv1/frontend/src/Componentz/Navbar.js":"4","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Home.js":"5","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/About.js":"6","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Error.js":"7","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Signup.js":"8","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Login.js":"9","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Store.js":"10","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Welcome.js":"11","/home/rubik/Documents/myServers/serv1/frontend/src/Contexts/LoginContext.js":"12","/home/rubik/Documents/myServers/serv1/frontend/src/Componentz/ProfileNavLink.js":"13","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Devices.js":"14","/home/rubik/Documents/myServers/serv1/frontend/src/Componentz/Card.js":"15"},{"size":500,"mtime":1609903711261,"results":"16","hashOfConfig":"17"},{"size":3085,"mtime":1611369895926,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609903711261,"results":"19","hashOfConfig":"17"},{"size":2250,"mtime":1611179318832,"results":"20","hashOfConfig":"17"},{"size":1010,"mtime":1611369986966,"results":"21","hashOfConfig":"17"},{"size":522,"mtime":1611369267147,"results":"22","hashOfConfig":"17"},{"size":541,"mtime":1611369326633,"results":"23","hashOfConfig":"17"},{"size":4215,"mtime":1611369605358,"results":"24","hashOfConfig":"17"},{"size":3976,"mtime":1611369508989,"results":"25","hashOfConfig":"17"},{"size":464,"mtime":1611369621914,"results":"26","hashOfConfig":"17"},{"size":4347,"mtime":1611369150323,"results":"27","hashOfConfig":"17"},{"size":152,"mtime":1610820107344,"results":"28","hashOfConfig":"17"},{"size":2956,"mtime":1611267559044,"results":"29","hashOfConfig":"17"},{"size":3760,"mtime":1611369239178,"results":"30","hashOfConfig":"17"},{"size":698,"mtime":1611263520283,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1pnlhoi",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/rubik/Documents/myServers/serv1/frontend/src/index.js",[],["67","68"],"/home/rubik/Documents/myServers/serv1/frontend/src/App.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/reportWebVitals.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Componentz/Navbar.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Home.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/About.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Error.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Signup.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Login.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Store.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Welcome.js",["69"],"import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n//import { useParams } from \"react-router-dom\";\nimport LoginContext from \"../Contexts/LoginContext\";\nimport logo from \"../smart_home1.svg\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"../Componentz/Card\";\n\n// Welcome page after user login\n// View their hubs and its status and let them add hubs\nconst Welcome = () => {\n    const loginContextObj = useContext(LoginContext);\n\n    const [hub, setHub] = useState(\"\");\n    const [displayHubs, setDisplayHubs] = useState([]);\n\n    //On load, fetch user's hubs and their status\n    useEffect(() => {\n        axios\n            .post(\"/api/get-hub\", {\n                user_id: loginContextObj.userID,\n            })\n            .then((res) => {\n                if (res.data) {\n                    setDisplayHubs([...res.data]);\n                    console.log(\"Found Hubs: \" + JSON.stringify(displayHubs));\n                }\n            })\n            .catch((err) => console.error(err.response.data));\n    }, []);\n\n    // Add hub\n    const addHubHandler = (event) => {\n        event.preventDefault();\n        console.log(\"Device Adder: \" + hub);\n        axios\n            .post(\"/api/set-hub\", {\n                user_id: loginContextObj.userID,\n                serial_id: hub,\n            })\n            .then((res) => {\n                if (res.data.created) {\n                    console.log(\"Hub Created: \" + res.data.created);\n                }\n            })\n            .catch((err) => console.error(err.response.data));\n    };\n\n    return (\n        <>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img\n                        src={logo}\n                        className=\"App-logo\"\n                        alt=\"logo\"\n                        width=\"100px\"\n                    />\n                    <h1>{\"Welcome, \" + loginContextObj.userEmail}</h1>\n                </header>\n\n                <div className=\"containter\">\n                    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n                        {displayHubs.map((card) => {\n                            return (\n                                <div class=\"col\">\n                                    <Link\n                                        to={\n                                            \"/user/\" +\n                                            loginContextObj.userEmail +\n                                            \"/\" +\n                                            card.serial_id +\n                                            \"/devices\"\n                                        }\n                                        style={{ textDecoration: \"none\" }}\n                                    >\n                                        <Card\n                                            title={card.serial_id}\n                                            body={\"Status: \" + card.status}\n                                            status={card.status}\n                                        />\n                                    </Link>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <hr></hr>\n\n                <main className=\"container-sm form-min\">\n                    <form onSubmit={addHubHandler}>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"hubID\" className=\"form-label\">\n                                Enter Hub ID to add it\n                            </label>\n                            <input\n                                type=\"number\"\n                                className=\"form-control form-control-lg\"\n                                id=\"hubID\"\n                                placeholder=\"000\"\n                                value={hub}\n                                onChange={(e) => setHub(e.target.value)}\n                                required\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary mb-3\">\n                            Add Hub\n                        </button>\n                    </form>\n                </main>\n            </div>\n        </>\n    );\n};\nexport default Welcome;\n","/home/rubik/Documents/myServers/serv1/frontend/src/Contexts/LoginContext.js",[],"/home/rubik/Documents/myServers/serv1/frontend/src/Componentz/ProfileNavLink.js",["70"],"import React, { useContext } from \"react\";\nimport LoginContext from \"../Contexts/LoginContext\";\nimport { Link } from \"react-router-dom\";\n\nconst ProfileNavLink = () => {\n    const loginContextObj = useContext(LoginContext);\n\n    const logout = () => {\n        loginContextObj.setLoggedIn(false);\n        loginContextObj.setUserEmail(\"\");\n        console.log(\n            \"Logged State > login: \" +\n                loginContextObj.loggedIn +\n                \" email: \" +\n                loginContextObj.userEmail\n        );\n    };\n\n    if (loginContextObj.loggedIn) {\n        return (\n            <>\n                <ul className=\"navbar-nav mb-2 mb-sm-0 justify-content-end\">\n                    <li className=\"nav-item dropdown\">\n                        <a\n                            className=\"nav-link dropdown-toggle\"\n                            href=\"#\"\n                            id=\"dropdown03\"\n                            data-bs-toggle=\"dropdown\"\n                            aria-expanded=\"false\"\n                        >\n                            {\"User: \" + loginContextObj.userEmail}\n                        </a>\n                        <ul\n                            className=\"dropdown-menu dropdown-menu-end\"\n                            aria-labelledby=\"dropdown03\"\n                        >\n                            <li>\n                                <Link\n                                    className=\"dropdown-item\"\n                                    to={\"/user/\" + loginContextObj.userEmail}\n                                >\n                                    Hubs\n                                </Link>\n                            </li>\n                            <li>\n                                <Link className=\"dropdown-item\" to=\"/about\">\n                                    Devices\n                                </Link>\n                            </li>\n                            <li>\n                                <button\n                                    className=\"dropdown-item\"\n                                    onClick={logout}\n                                >\n                                    Logout\n                                </button>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </>\n        );\n    } else\n        return (\n            <>\n                <ul className=\"navbar-nav mb-2 mb-sm-0 justify-content-end\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/signup\">\n                            Signup\n                        </Link>\n                    </li>\n                </ul>\n            </>\n        );\n};\n\nexport default ProfileNavLink;\n","/home/rubik/Documents/myServers/serv1/frontend/src/Pages/Devices.js",["71"],"import React, { useEffect, useState } from \"react\";\nimport logo from \"../smart_home1.svg\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../Componentz/Card\";\nimport axios from \"axios\";\nimport \"./Devices.css\";\n\n// Devices page for the hub user selected\n// Interact with the devices from this page\nconst Devices = () => {\n    const params = useParams();\n    const [deviceList, setDeviceList] = useState([]);\n    const [light, setLight] = useState(0);\n\n    // Toggle light handler\n    const lightHandler = (index) => {\n        let on_off = false;\n        if (light === 0) {\n            setLight(100);\n            on_off = true;\n        } else {\n            setLight(0);\n            on_off = false;\n        }\n        axios\n            .post(\"/api/set-device\", {\n                device_name: \"light1\",\n                serial_id: params.hubid,\n                on_off,\n                dim_level: light,\n            })\n            .then((res) => {\n                if (res.data) {\n                    console.log(\"Device Updated: \" + res.data.device_updated);\n                    if (res.data.device_updated) {\n                        const newDeviceList = [...deviceList];\n                        newDeviceList[index] = {\n                            ...deviceList[index],\n                            dim_level: light,\n                        };\n                        setDeviceList(newDeviceList);\n                    }\n                }\n            })\n            .catch((err) => console.error(err.response.data));\n    };\n\n    // On load, fetch all the devices for the specific hub\n    useEffect(() => {\n        axios\n            .post(\"/api/get-devices\", {\n                serial_id: params.hubid,\n            })\n            .then((res) => {\n                if (res.data) {\n                    setDeviceList([...res.data]);\n                    console.log(\"Found Hubs: \" + JSON.stringify(deviceList));\n                }\n            })\n            .catch((err) => console.error(err.response.data));\n    }, []);\n\n    return (\n        <>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img\n                        src={logo}\n                        className=\"App-logo\"\n                        alt=\"logo\"\n                        width=\"100px\"\n                    />\n                    <h1>DEVICES</h1>\n                    <h2>{JSON.stringify(params)}</h2>\n                </header>\n\n                <div className=\"containter\">\n                    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n                        {deviceList.map((card, index) => {\n                            return (\n                                <div class=\"col\">\n                                    <button\n                                        onClick={() => lightHandler(index)}\n                                        className=\"unstyled\"\n                                    >\n                                        <Card\n                                            title={card.device_name}\n                                            body={\n                                                \"Status: \" +\n                                                card.on_off +\n                                                \"\\nIntensity:\" +\n                                                card.dim_level\n                                            }\n                                            status={card.dim_level}\n                                        />\n                                    </button>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Devices;\n","/home/rubik/Documents/myServers/serv1/frontend/src/Componentz/Card.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":30,"column":8,"nodeType":"80","endLine":30,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":24,"column":25,"nodeType":"84","endLine":30,"endColumn":26},{"ruleId":"78","severity":1,"message":"85","line":61,"column":8,"nodeType":"80","endLine":61,"endColumn":10,"suggestions":"86"},{"ruleId":"74","replacedBy":"87"},{"ruleId":"76","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayHubs' and 'loginContextObj.userID'. Either include them or remove the dependency array.","ArrayExpression",["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'deviceList' and 'params.hubid'. Either include them or remove the dependency array.",["92"],["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [displayHubs, loginContextObj.userID]",{"range":"97","text":"98"},"Update the dependencies array to be: [deviceList, params.hubid]",{"range":"99","text":"100"},[1057,1059],"[displayHubs, loginContextObj.userID]",[2018,2020],"[deviceList, params.hubid]"]